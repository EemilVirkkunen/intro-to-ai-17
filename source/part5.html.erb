---
  title: Part 5
  exercise_page: true
  quiz_page: false
  published: true
---


You can find the lecture slides for this part on the <a href="https://courses.helsinki.fi/DATA15001/119123276">course homepage</a>
under Materials.


<% partial 'partials/material_heading' do %>
  Digital Signal Processing
<% end %>

<p>
  The topics of this week include two special kinds of data that
  require somewhat specific techniques: digital signals (such as audio
  or images), and natural language.
</p>

<p>
  Next week we will finish the Digital Signal Processing and Robotics
  theme by studying robotics.
</p>

<% partial 'partials/hint', locals: { name: 'Learning objectives of Part 5' } do %>

<table class="table">
  <tr>
    <td>
      Theme
    </td>
    <td>
      Objectives (after the course, you ...)
    </td>
  </tr>
  <tr>
    <td>
      Natural language processing
    </td>
    <td>
      <ul>
	<li>can generate sentences from a given context-free grammar
	<li>can parse a sentence using the Cocke-Younger-Kasami algorithm
      </ul>
    </td>
  </tr>
  <tr>
    <td>
      Digital Signal Processing and Robotics
    </td>
    <td>
      <ul>
	<li>can describe the principles of at least one pattern recognition method (e.g., SIFT/SURF)
	<li>can apply at least one pattern recognition method in practice
      </ul>
    </td>
  </tr>
</table>

<% end %>

<% partial 'partials/material_sub_heading' do %>
  Digital signal representations
<% end %>

<p>
  Digital image and audio signals represent recordings of natural
  signals in numerical form. For images, the values represent 
  pixel intensities stored in a two-dimensional array. A third
  dimension can be used to store different bands for, e.g.,
  red, green, and blue (RGB). We can also think of the values
  are functions of the x and y coordinates, F(x,y).
</p>

<p>
  <i>Fun fact (but not required for the exam):</i> In the case of
  audio, the signal can be thought to be a signal of time, F(t), but
  other representations such as those that are functions of frequency,
  F(f), are commonly used. The frequency representation is
  particularly well suited for compact representation since frequency
  bands outside the audible range 20 Hz to 20 kHz can be left out
  without observable (to humans) effect.
</p>

<% partial 'partials/material_sub_heading' do %>
  Pattern recognition
<% end %>

<p>
  <b>Pattern recognition</b> is a good example of an AI problem
  involving digital signals. It means generally the problem is
  recognizing an object in a signal (typically an image). The task is
  made hard because signals tend to vary greatly depending on external
  conditions such as camera angle, distance, lighting conditions, 
  echo, noise, and differences between recording devices. Therefore
  the signal is practically always different even if it is from the
  same object.
</p>

<p>
  Based on these facts, an essential requirement for successful
  pattern recognition is the extraction of <b>invariant features</b>
  in the signal. Such features are insensitive (or as insensitive as
  possible) to variation in the external conditions, and tend to be
  similar in recordings of the same object. In the lecture slides
  there are two photographs of an Afghan girl. She was identified
  based on the unique patterns in the iris of the eye. Here the iris
  is the invariant feature, which remains unchanged also even if the
  person grows older and may have otherwise a different appearance.
  We used the iris example as a metaphor for invariance with respect
  to external conditions, but it is actually also a practical personal
  identification technique
  (see <a href="https://en.wikipedia.org/wiki/Iris_recognition">Iris
  recognition</a>, Wikipedia).
</p>

<% partial 'partials/material_sub_heading' do %>
  SIFT and SURF
<% end %>

<p>
  Good examples of commonly used feature extraction techniques for
  image data include Scale-Invariant Feature Transform (SIFT) and
  Speeded-Up Robust Features (SURF). We take a closer look at the
  SURF technique. It can be broken into two or three stages:
  <ol>
    <li>
      <b>Choosing interest points:</b> We identify a set of (x,y)
      points by maximizing the determinant of a so called Hessian
      matrix that characterizes the local intensity variation 
      around the point. The interest points tend to be located
      at "blobs" in the image. (You are not required to decode the
      details of this -- a rough idea is enough.)
    <li>
      <b>Feature descriptors:</b> The intensity variation around each
      interest point is described by a feature descriptor which is a
      64-dimensional vector (array of 64 real values).  In addition,
      the feature has a scale (size) and an orientation (dominant
      direction).
    <li>
      <b>Feature matching:</b> If the problem is to match objects
      between two images, then both of the above tasks are performed
      on both images. We then find pairs of feature descriptors
      (one extracted from image A and the other from image B) that
      are sufficiently close to each other in Euclidean distance.
  </ol>
</p>
<img src="/img/diagrams/surf-example-mars.png" width=88%>
<p>
  Above is an example of detected features (interest point location,
  scale, and orientation shown by the circle; the color encodes the
  type of contrast, i.e., dark on light background or vice versa).
  Image credit: NASA/Jet Propulsion Laboratory/University of
  Arizona. Image from the edge of the south polar residual cap on
  Mars.
</p>
