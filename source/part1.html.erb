---
  title: Part 1
  exercise_page: true
  quiz_page: true
  published: true
---


<% partial 'partials/material_heading' do %>
  What is AI?
<% end %>

In this first part, we will discuss what we mean when we talk about AI.
It turns out that there is no exact definition at all, but that the
field is rather being redefined at all times.

We will also briefly discuss the philosophical aspects of AI: whether
intelligent behavior implies or requires the existence of a ''mind'', and
in what extent is consciousness replicable as a computational process.
However, this course is first and foremost focused on building 
practically useful AI tools, and we will quickly push considerations 
about consciousness aside as they tend to be only in the way when 
designing working solutions to real problems.

<% partial 'partials/hint', locals: { name: 'Learning objectives of Part 1' } do %>

<table class="table">
  <tr>
    <th>
      Theme
    </th>
    <th>
      Objectives (after the course, you ...)
    </th>
  </tr>
  <tr>
    <td>
      Philosophy and history of AI
    </td>
    <td>
      <ul>
	<li>can express the basic philosophical problems related to AI
(the difficulty in defining AI and consciousness, acting vs thinking,
Turing test) 
	<li>can distinguish between realistic and unrealistic AI in
science-fiction 
	<li>can describe the contrast between "Good Old Fashioned
AI" (GOFAI) and modern AI approaches 
	<li>know the main-stream developments in the history of AI
      </ul>
    </td>
  </tr>
</table>

<% end %>


<% partial 'partials/material_sub_heading' do %>
  A (Very) Brief History of AI
<% end %>

<p>
  Artificial Intelligence (AI) is a subdiscipline of Computer
  Science. Indeed, it is arguably as old as Computer Science itself:
  <a href="https://en.wikipedia.org/wiki/Alan_Turing">Alan Turing</a>
  (1912-1954) proposed the Turing machine -- the formal model
  underlying the theory of computation -- as a model with equivalent
  capacity to carry out calculations as a human being (ignoring
  resource constraints on either side).
</p>

<p>
  The term AI was proposed by John McCarthy (1927-2011) -- often
  referred to as the Father of AI -- as the topic of a summer seminar,
  known as <a href="https://en.wikipedia.org/wiki/Dartmouth_workshop">
  Dartmouth conference</a> held in 1956 at Dartmouth College.
</p>

<p>
  As computers developed to the level where it was feasible to
  experiment with practical AI algorithms in the 1940s and 1950s, the most
  distinctive AI problems were games. Games provided a convenient
  restricted domain that could be formalized easily. Board games such
  as checkers, chess, and (recently quite prominently) Go, have
  inspired countless researchers,  and continue to do so.
</p>

<p>
  Closely related to games, search and planning algorithms were an
  area where AI lead to great advances in the 1960s: in a little
  while, we will be able to admire the beauty of, for example,
  the <a href="https://en.wikipedia.org/wiki/A*_search_algorithm">A*
  search algorithm</a> and
  <a href="https://en.wikipedia.org/wiki/Alpha%E2%80%93beta_pruning">alpha-beta
  pruning</a>, and apply them to solve AI problems.</p>

<% partial 'partials/hint', locals: { name: 'The Elusive Definition of AI' } do %>

<p>
  There's an old (geeky) joke that AI is defined as ''cool things that
  computer can't do.'' The joke is that under this definition, AI can
  never make any progress: as soon as we find a way to do something cool
  with a computer, it stops being an AI problem.
</p>

<p>
  However, there is an element of truth in the definition in the sense
  that fifty years ago, for instance, search and planning algorithms
  were considered to belong to the domain of AI but nowadays algorithms
  such as breadth-first and depth-first search, and A*, are treated
  under Data Structures and Algorithms.
</p>

<% end %>

<p>
  The history of AI, just like many other fields of science, has
  witnessed the coming and going (and coming back and going again,
  etc.) of various different paradigms. Typically, a particular
  paradigm is adopted by most of the research community and
  ultra-optimistic estimates of progress in the near-future are
  provided. All such scenarios so far have ended up running into
  unsurmountable, unexpected problems and the interest has died
  out. For example, in the 1960s <b>artificial neural networks</b>
  were widely believed to solve all AI problems by imitating the
  learning mechanisms in the nature (such as the human central nervous
  system and the brain, in particular). However, certain negative
  results about the expressibility of certain neural computation
  models quickly lead to pessimism and an <b>AI winter</b> followed.
</p>

<p> 
  The 1980s brought a new wave of AI methods based on logic-based
  methods. So called <b>expert systems</b>, manipulating knowledge
  elicited from domain experts, such as medical doctors, showed
  great promise by solving nicely contained, well-defined 
  ''toy problems'', but turned out to fail every time when they
  were deployed in more complex, real-world problems. The second
  (or the third, depending on the counting) AI winter lasted from the
  late 1980s until the mid-1990s.
</p>
 
<p>
  Currently, since the turn of the millennium, AI has been on the rise
  again. In the late 1990s, the ''classical'' or <b>''Good
  Old-Fashioned AI'' (GOFAI)</b> that addressed crisp, clearly
  defined, and isolated problems begun to be replaced by so called
  <b>''modern AI''</b> (in lack of a better name). Modern AI
  introduced methods that were able to handle uncertain and imprecise
  information, most notably by probabilistic methods, and which had
  the great advantage that it was designed to work in the real world.
  The rise of modern AI has continued until present day, further
  boosted by the come-back of neural networks under the label <b>Deep
  Learning</b>.
</p>

<p>
  Whether the history will repeat itself, and the current boom will be
  once again followed by an AI winter, is a matter that only time can
  tell. Even if it does, the significance of AI in the society is
  going to stay. Today, we live our life surrounded by AI, most of the
  time happily unaware of it: the music that we listen, the products
  that we buy online, the movies and series that we watch, our routes
  of transportation, and the information that we have available, are
  all influenced more and more by AI.
</p>

<p>
  No wonder that you have decided to learn more about AI!
</p>

<p> Being able to apply AI methods and thus to be part of the progress
  of AI is a great way to change the world for the better. And even if
  you wouldn't aspire to become an AI researcher or developer, it is
  almost your duty as a citizen to understand at least the
  fundamentals of AI so that you can better use it: be aware of its
  limitations and enjoy all the goodies it can provide.
</p>

<% partial 'partials/material_sub_heading' do %>
  On the Philosophy of AI
<% end %>



<p>
  The best known contribution to AI by Turing is his <i>imitation
  game</i>, which later became known as the <a href="https://en.wikipedia.org/wiki/Turing_test">Turing test</a>.  In the
  test, a human interrogator interacts with two players, A and B, by
  exchanging written messages (in a ''chat''). If the interrogator
  cannot determine which player, A or B, is a computer and which is a
  human, the computer is said to pass the test.  The argument is that
  if a computer is indistinguishable from a human in a general
  natural language conversation, then it must have reached human-level
  intelligence.
</p>

<p>
  Turing's argument that whether a being is intelligent or not can be
  decided based on the behavior it exhibits has been challenged by
  some. The best known opponent of the argument is John Searle's
  <a href="http://www.iep.utm.edu/chineser/">Chinese Room</a> thought
  experiment. Searle descibes an experiment where a person who doesn't
  know Chinese is locked in a room. Outside the room is a person who
  can slip notes written in Chinese inside the room through a mail
  slot. The person inside the room is given a large manual where she
  can find detailed instructions for responding to the notes she
  receives from the outside.
</p>

<p>
  Searle argued that that even if the person outside the room gets the
  impression that he is in a conversation with another
  Chinese-speaking person, the person inside the room does <i>not
  understand</i> Chinese. Likewise, his argument continues, a
  machine that behaves in an intelligent manner, for example, by
  passing the Turing test, it doesn't follow that it <i>is</i>
  intelligent or that it has a ''mind'' in the way that a human
  has. The word ''intelligent'' can also be replaced by the word
  ''conscious'' and a similar argument can be made.
</p>

<p>
  The definition of intelligence, natural or artificial, and
  consciousness appears to be extremely evasive and leads to
  apparently never-ending discourse. In an intellectual company, with
  plenty of good Burgundy (Bordeaux will also do), this discussion can
  be quite enjoyable. However, as John
  McCarthy <a href="http://www-formal.stanford.edu/jmc/aiphil/node2.html#SECTION00020000000000000000">pointed
  out</a>, the philosophy of AI is ''unlikely to have any more effect
  on the practice of AI research than philosophy of science generally
  has on the practice of science.''
</p>

<% partial 'partials/exercise', locals: { name: 'What is AI, really?' } do %>

<p>
  Your first exercise will be to take a look into current AI research.
  Find an AI-related scientific article from recent years. Pick one
  that you can understand, by and large: try to see what the problem
  statement, methodology, and conclusions are, roughly.
</p>

<p>
  Good places to start your search are, e.g., the proceedings of
  <a href="http://www.aaai.org">AAAI</a>,
  <a href="http://www.ijcai.org">IJCAI</a>, and 
  <a href="https://www.eurai.org/activities/ECAI_conferences">ECAI</a>
  conferences or magazine-style publications that may be somewhat less
  technical and intended for broader audiences, such
  as <a href="http://ai-magazine.com/">AI Magazine</a>. However,
  please try to avoid articles that are overly polemic and
  superficial -- the idea is to take a look at <i>academic</i> AI,
  and ignore the BS on my Facebook feed...
</p>

<p>
  Read the article through and answer the following questions:
  <ol>
    <li> What is the research problem?
    <li> Is the topic related to the topics of this course?
    <li> Generally speaking, what impression does the article give
      about modern AI research? Reflect on the history and philosophy of
      AI discussed above.
    <li> What studies would be needed to undertand the article in detail?
    <li> Bonus question: Considering the article you chose, how relevant
      is the ''Terminator'' scenario where AI becomes self-conscious and
      turns against the humankind?
  </ol>
</p>

<% end %>

<% partial 'partials/hint', locals: { name: 'How do I return my solutions?' } do %>

<p>
  Solutions to ''pen-and-paper'' exercises such as this one 
  are turned in at the exercise sessions where you should make sure
  to mark completed exercises on the sheet that is circulated in
  the beginning.
</p>

<p>
  For programming exercises, you will be able to use the TMC system
  which helps you see whether the solution is correct. However,
  even the TMC exercises are marked at the exercise session.
  In other words, <b>it is not enough to upload the programming
    exercises on TMC to get the points</b>.
</p>

<% end %>



<p>
  We will now put our wine glasses aside, roll our sleeves, and turn
  our minds toward more practical considerations.
  Let's jump to our first technical topic: 
  search and problem-solving.
</p>

<% partial 'partials/material_heading' do %>
  Search and Problem-Solving
<% end %>

<p>
  Many problems can be phrased as search problems. Formulating the
  search space and choosing an appropriate search algorithm often
  requires careful thinking and is an important skill for an AI
  developer.
</p>

<p>
  Basic tree and network traversal algorithms belong to the
  course prerequisites, and you should already be familiar with 
  breadth-first, depth-first, and best-first search (including its
  special case, the A* algorithm). If you forgot the details right
  after taking the exam, no need to worry: we will revisit them
  below.
</p>

<% partial 'partials/material_sub_heading' do %>
  Breadth-First and Depth-First Search
<% end %>


<% partial 'partials/exercise', locals: { name: 'Breadth-first and depth-first search' } do %>

<p>
  <img src=img/exercises/ex1/Drawing.png align=right>
  Consider the network on the right.
</p>

<p>
  <ol>
    <li> Simulate (on pen-and-paper) breadth-first search starting from
      node A when the goal node is H.
    <li> Do the same with depth-first search.
  </ol>
  In each case, present the contents of the node list (queue or stack)
  at each step of the search. To ensure that everyone gets the same
  result, let's agree that nodes are added to the list in alphabetical
  order.
</p>


<% partial 'partials/exercise', locals: { name: 'Towers of Hanoi' } do %>

<p>
  Let's solve the well-known
puzzle <a href="https://www.britannica.com/topic/Tower-of-Hanoi">Towers
of Hanoi</a>. The puzzle involves three pegs, and three discs: one
large, one medium-sized, and one small.  (Actually, there can be any
number of discs but for the pen-and-paper exercise, three is plenty.)
</p>

<p>In the initial state, all three discs are stacked in the first
  (leftmost) peg. The goal is to move the discs to the third peg.
  You can only move one disc at a time, and it is not allowed to
  put a larger disc on top of a smaller disc.</p>

<p>This pretty picture shows the initial state and the goal state:
<pre>
initial  |     |     |          goal    |     |     |          
state:  ---    |     |          state:  |     |    ---  
       -----   |     |                  |     |   -----     
      =====================         ====================
</pre>
</p>

<p>
  <ol>
    <li> Draw a network diagram where the nodes are all the states
      that can be achieved from the initial state, and the edges
      represent allowed transitions (moves) between them.
    <li> Simulate breadth-first search in the state space.
      <b>Note:</b>You don't have to explicitly specify the
      contents of the queue at each step. It is enough to provide
      the traversal order.
    <li> Do the same with depth-first search.
    <li> Compare the search methods on two accounts: <i>a)</i>
      what is the length of the path that each algorithm finds,
      <i>b)</i> what is the number of states visited during the
      search. <b>Note:</b> It is important to note that these are
      two different things (the length of the path, and the number
      of visited states.)
    <li> Does the result depend on the order in which the neighbors
      of each node are added into the list?
  </ol>
</p>

<p>A bonus exercise: Try to see the symmetry in the state diagram,
  and generalize to <i>n>3</i> discs.

<% end %>

